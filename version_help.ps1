$tag = git describe --tags --always
if (-Not ($tag -match ".+\..+\..+\..+")) {
    $tag = "0.0.0." + $tag
}
$commatag = $tag -replace "\.",","
$commatag = $commatag -replace "-","0"
$commatag = $commatag -replace "[A-z]","0"
((Get-Content -path ./Resource.rc -Raw) -replace "FILEVERSION .*,.*,.*,.*", ("FILEVERSION " + $commatag)) | Set-Content -Path ./Resource.rc
((Get-Content -path ./Resource.rc -Raw) -replace "PRODUCTVERSION .*,.*,.*,.*", ("PRODUCTVERSION " + $commatag)) | Set-Content -Path ./Resource.rc
((Get-Content -path ./Resource.rc -Raw) -replace '"FileVersion", ".*"', ('"FileVersion", "' + $tag + '"')) | Set-Content -Path ./Resource.rc
((Get-Content -path ./Resource.rc -Raw) -replace '"ProductVersion", ".*"', ('"ProductVersion", "' + $tag + '"')) | Set-Content -Path ./Resource.rc

$cleanTag = $tag
$versionFileText = "
/* Autogenerated version info file */
#pragma once

namespace version {
inline const auto VERSION_STR = ""$tag"";
inline const auto IS_SNAPSHOT = $( If ($tag.Length -gt 10) {'true'} Else {'false'});
inline const auto VERSION_MAJOR = $($cleanTag.Split('.')[0]);
inline const auto VERSION_MINOR = $($cleanTag.Split('.')[1]);
inline const auto VERSION_PATCH = $($cleanTag.Split('.')[2]);
inline const auto VERSION_REVISION = ""$($cleanTag.Split('.')[3])"";
}

"

if (!(Test-Path '../version.hpp')) {
    New-Item -Path ".." -Name "version.hpp" -ItemType "file" -Value $versionFileText
} else {
    Set-Content -Path "../version.hpp" -Value $versionFileText
}


if ((Test-Path '../Installer/Installer.nsi')) {
    ((Get-Content -path '../Installer/Installer.nsi' -Raw) -replace '!define VERSION ".*"', ('!define VERSION "' + $tag + '"')) | Set-Content -Path '../Installer/Installer.nsi'
}